{"version":3,"sources":["Layout/Header.module.css","UI/LoadingSpinner.js","api/api.js","useHook/useHttp.js","pages/PageNotFound.module.css","UI/LoadingSpinner.module.css","pages/PageNotFound.js","Layout/Header.js","Layout/Layout.js","App.js","index.js"],"names":["module","exports","LoadingSpinner","className","classes","spinner","fetchQuotesData","a","fetch","response","ok","Error","json","key","data","fetchedData","push","id","sendQuotesData","quotes","method","headers","body","JSON","stringify","author","text","FIREBASE_DOMAIN","getFilteredQuotes","quoteId","fetchCommentsData","sendCommentsData","cmt","comments","httpReducer","state","action","type","status","error","errorMessage","useHttp","requestFunction","useReducer","dispatch","sendRequest","useCallback","requestData","responseData","message","pageNotFound","notfound","Header","header","headerList","activeClassName","quote","to","exact","Layout","props","children","App","useEffect","NewQuote","React","lazy","Fullscreen","Quotes","fallback","style","textAlign","path","checkData","from","PageNotFound","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b66fd662.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3itG4\",\"headerList\":\"Header_headerList__1fr0l\",\"quote\":\"Header_quote__K0Kv5\"};","import classes from './LoadingSpinner.module.css';\r\n\r\nconst LoadingSpinner = () => {\r\n  return <div className={classes.spinner}></div>;\r\n}\r\n\r\nexport default LoadingSpinner;","\r\n\r\n\r\nexport const fetchQuotesData =async()=>{\r\n    // const fetchData =async()=>{\r\n        const response = await fetch('https://quotes-fd6ed-default-rtdb.firebaseio.com/quotes.json')\r\n        if(!response.ok){\r\n            throw new Error('Fetch failed!')\r\n        }\r\n        const data = await response.json()\r\n        const fetchedData =[]\r\n        for(let key in data){\r\n            fetchedData.push({...data[key],id:key})\r\n        }\r\n        return fetchedData\r\n    // }\r\n        // try{\r\n        //     await fetchData()\r\n        // }catch(error){\r\n        //     return 'Fetch failed'\r\n        // }\r\n\r\n}\r\n\r\nexport const sendQuotesData =async(quotes)=>{\r\nconst response = await fetch('https://quotes-fd6ed-default-rtdb.firebaseio.com/quotes.json',{\r\n    method:'POST',\r\n    headers:{'Content-Type':'application/json'},\r\n    body:JSON.stringify({\r\n        author:quotes.author,\r\n        text:quotes.text\r\n    })\r\n})\r\nconst responseData = await response.json()\r\nif(!response.ok){\r\n    throw new Error('Sending failed')\r\n}\r\n\r\n}\r\n\r\nconst FIREBASE_DOMAIN = 'https://quotes-fd6ed-default-rtdb.firebaseio.com'\r\nexport const getFilteredQuotes = async (quoteId)=>{\r\n    const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`)\r\n        if(!response.ok){\r\n            throw new Error('Fetch failed!')\r\n        }\r\n        const data = await response.json()\r\n        const fetchedData ={\r\n            ...data,\r\n            id:quoteId\r\n        }\r\n        \r\n        return fetchedData\r\n}\r\n\r\n\r\nexport const fetchCommentsData =async(quoteId)=>{\r\n    // const fetchData =async()=>{\r\n        const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`)\r\n        if(!response.ok){\r\n            throw new Error('Fetch failed!')\r\n        }\r\n        const data = await response.json()\r\n        const fetchedData =[]\r\n        for(let key in data){\r\n            fetchedData.push({...data[key],id:key})\r\n        }\r\n        return fetchedData\r\n    }\r\n\r\n    export const sendCommentsData =async(cmt)=>{\r\n      const response = await fetch(`${FIREBASE_DOMAIN}/comments/${cmt.quoteId}.json`,{\r\n          method:'POST',\r\n          headers:{'Content-Type':'application/json'},\r\n          body:JSON.stringify({\r\n                comments:cmt.comments,\r\n          })\r\n      })\r\n      if(!response.ok){\r\n          throw new Error('Sending failed')\r\n      }\r\n      }\r\n","import { useReducer,useCallback } from \"react\"\r\n\r\n\r\n\r\nconst httpReducer =(state,action)=>{\r\nif(action.type === 'SEND'){\r\n    return {\r\n        status:'pending',\r\n        data:state.data,\r\n        error:state.error\r\n    }\r\n}\r\nif(action.type === 'SUCCESS'){\r\n    return{\r\n        status:'success',\r\n        data:action.data,\r\n        error:state.error\r\n    }\r\n}\r\nif(action.type === 'ERROR'){\r\n    return{\r\n        status:'error',\r\n        data:state.data,\r\n        error:action.errorMessage\r\n    }\r\n}\r\nreturn state\r\n}\r\n\r\n\r\n\r\nconst useHttp =(requestFunction)=>{\r\n    const [state,dispatch] = useReducer(httpReducer,{\r\n        status:null,\r\n        data:[],\r\n        error:null\r\n    })\r\nconst sendRequest =useCallback(async (requestData)=>{\r\n    dispatch({type:'SEND'})\r\n    try{\r\n        const responseData = await requestFunction(requestData)\r\n        dispatch({type:'SUCCESS',data:responseData})\r\n    }catch(error){\r\n       dispatch({type:'ERROR',errorMessage:error.message})\r\n    }\r\n},[requestFunction])\r\n    return {\r\n        sendRequest,\r\n        ...state\r\n    }\r\n}\r\n\r\nexport default useHttp","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notfound\":\"PageNotFound_notfound__27pUL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__3o3xO\"};","import classes from './PageNotFound.module.css'\r\n\r\nconst pageNotFound = ()=>{\r\n    return(\r\n      <div className={classes.notfound}>Page not found!</div>\r\n    )\r\n}\r\n\r\nexport default pageNotFound","import classes from './Header.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst Header = ()=>{\r\n    return(\r\n      <header className={classes.header}>\r\n          <nav>\r\n              <h2>Great Quotes</h2>\r\n              <ul className={classes.headerList}>\r\n                  <li><NavLink  activeClassName={classes.quote} to='/quotes' exact>All Quotes</NavLink></li>\r\n                  <li><NavLink  activeClassName={classes.quote} to = '/new-quote'>Add a Quote</NavLink></li>\r\n              </ul>\r\n          </nav>\r\n      </header>\r\n    )\r\n}\r\n\r\nexport default Header","import classes from './Layout.module.css'\r\nimport {Fragment} from 'react'\r\nimport Header from './Header'\r\n\r\n\r\n\r\nconst Layout =(props)=>{\r\n    return(\r\n       <Fragment>\r\n           <Header/>\r\n           <main>{props.children}</main>\r\n       </Fragment>\r\n    )\r\n}\r\n\r\nexport default Layout","import {Route,Redirect,Switch} from 'react-router-dom'\nimport PageNotFound from './pages/PageNotFound';\nimport Layout from './Layout/Layout';\nimport { fetchQuotesData } from './api/api';\nimport useHttp from './useHook/useHttp';\nimport React,{useEffect,Suspense} from 'react'\nimport LoadingSpinner from './UI/LoadingSpinner'\n\nfunction App() {\n  const {sendRequest,data} = useHttp(fetchQuotesData)\nuseEffect(()=>{\nsendRequest()\n},[sendRequest])\n\nconst NewQuote = React.lazy(()=>import('./pages/NewQuote'))\nconst Fullscreen = React.lazy(()=>import('./pages/Fullscreen'))\nconst Quotes = React.lazy(()=>import('./pages/Quotes'))\n  return (\n    <div>\n      <Layout/>\n      <Suspense fallback={<div style ={{textAlign:'center'}}><LoadingSpinner/></div>}>\n      <Switch>\n      <Route path='/quotes/:quoteId'>\n            <Fullscreen checkData={data}/>\n          </Route>  \n      <Redirect from='/' to='/quotes' exact/>\n      <Route path='/quotes' exact>\n        <Quotes />\n        </Route>\n        <Route path='/new-quote'>\n          <NewQuote/>\n        </Route>\n      <Route path='*'>\n        <PageNotFound/>\n      </Route>\n      </Switch>\n      </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}