{"version":3,"sources":["pages/NewQuote.module.css","UI/Card.module.css","UI/Card.js","pages/PromtQuotes.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","PromtQuotes","console","log","when","isEntering","message","location","NewQuote","useHttp","sendQuotesData","sendRequest","error","data","status","textInputRef","useRef","authorInputRef","history","useHistory","useState","setIsEntering","useEffect","push","loading","LoadingSpinner","form","onSubmit","event","preventDefault","sendData","text","current","value","author","onFocus","control","htmlFor","id","type","ref","rows","btn"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,QAAU,0BAA0B,IAAM,sBAAsB,QAAU,0BAA0B,MAAQ,0B,mBCA9HD,EAAOC,QAAU,CAAC,KAAO,qB,4FCOVC,EANH,SAACC,GACT,OACC,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,sCCiB3BC,EAfI,SAACL,GAEhB,OADAM,QAAQC,IAAI,OAER,eAAC,WAAD,WACI,cAAC,IAAD,CACAC,KAAOR,EAAMS,WACbC,QAAU,SAACC,GAAD,MACN,yEAGT,8BAAMX,EAAMI,eCkDJQ,UAzDC,WACZ,MAAuCC,YAAQC,KAAxCC,EAAP,EAAOA,YAAiBC,GAAxB,EAAmBC,KAAnB,EAAwBD,OAAME,EAA9B,EAA8BA,OAC1BC,EAAeC,mBACfC,EAAiBD,mBACnBE,EAASC,cACf,EAAmCC,oBAAS,GAA5C,mBAAOf,EAAP,KAAkBgB,EAAlB,KAIAnB,QAAQC,IAAIE,GACZH,QAAQC,IAAI,MAeR,OALAmB,qBAAU,WACM,YAATR,GACCI,EAAQK,KAAK,aAEnB,CAACL,EAAQJ,IACG,YAAXA,EACQ,qBAAKjB,UAAWC,IAAQ0B,QAAxB,SACH,cAACC,EAAA,EAAD,MAIM,UAAXX,EACM,qBAAKjB,UAAWC,IAAQc,MAAxB,SACFA,IAIH,cAAC,EAAD,UACI,cAAC,EAAD,CAAaP,WAAYA,EAAzB,SACJ,uBAAMR,UAAWC,IAAQ4B,KAAMC,SA5BZ,SAACC,GACvBA,EAAMC,iBACN,IAAMC,EAAS,CACZC,KAAKhB,EAAaiB,QAAQC,MAC1BC,OAAOjB,EAAee,QAAQC,OAEjCtB,EAAYmB,IAsBiDK,QAjC5C,WAClBd,GAAc,IAgCV,UACG,sBAAKxB,UAAWC,IAAQsC,QAAxB,UACI,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,GAAG,SAASC,KAAK,OAAOC,IAAKzB,OAExC,sBAAKlB,UAAWC,IAAQsC,QAAxB,UACI,uBAAOC,QAAQ,OAAf,kBACA,0BAAUC,GAAG,OAAOG,KAAK,IAAIF,KAAK,OAAOC,IAAKvB,OAElD,qBAAKpB,UAAWC,IAAQ4C,IAAxB,SACI,wBAAQH,KAAK,SAAb","file":"static/js/4.73e818f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"NewQuote_control__3_pKC\",\"btn\":\"NewQuote_btn__1hxCo\",\"loading\":\"NewQuote_loading__m5jh8\",\"error\":\"NewQuote_error__26ftR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1RRMC\"};","import classes from './Card.module.css'\r\n\r\nconst Card =(props)=>{\r\n    return(\r\n     <div className={classes.card}>{props.children}</div>\r\n    )\r\n}\r\n\r\nexport default Card","import {Prompt} from 'react-router-dom'\r\nimport {Fragment} from 'react'\r\n\r\n\r\n\r\n\r\nconst PromtQuotes =(props)=>{\r\n    console.log('dsd')\r\n    return(\r\n        <Fragment>\r\n            <Prompt\r\n            when ={props.isEntering}\r\n            message ={(location)=>\r\n                'Are you sure you want to leave? All your entered data will be lost!'\r\n            }\r\n            />\r\n       <div>{props.children}</div>\r\n       </Fragment>\r\n    )\r\n}\r\n\r\nexport default PromtQuotes","import classes from './NewQuote.module.css'\r\nimport Card from '../UI/Card'\r\nimport React,{useRef,useEffect,useState} from 'react'\r\nimport {useHistory} from 'react-router'\r\nimport { sendQuotesData} from '../api/api' \r\nimport useHttp from '../useHook/useHttp'\r\nimport LoadingSpinner from '../UI/LoadingSpinner'\r\nimport PromtQuotes from './PromtQuotes'\r\n\r\nconst NewQuote =()=>{\r\n    const {sendRequest,data,error,status} =useHttp(sendQuotesData)\r\n  const textInputRef = useRef()\r\n  const authorInputRef = useRef()\r\nconst history =useHistory()\r\nconst [isEntering,setIsEntering] = useState(false)\r\nconst onFocusHandler =()=>{\r\n    setIsEntering(true)\r\n}\r\nconsole.log(isEntering)\r\nconsole.log('sd')\r\n    const onSubmitHandler =(event)=>{\r\n     event.preventDefault()\r\n     const sendData={\r\n        text:textInputRef.current.value,\r\n        author:authorInputRef.current.value\r\n    }\r\n     sendRequest(sendData)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(status==='success'){\r\n            history.push('/quotes')\r\n        }\r\n    },[history,status])\r\n    if(status === 'pending'){\r\n        return <div className={classes.loading}>\r\n            <LoadingSpinner/>\r\n        </div>\r\n    }\r\n\r\n    if(status === 'error'){\r\n      return <div className={classes.error}>\r\n          {error}\r\n      </div>\r\n    }\r\n    return(\r\n        <Card>\r\n            <PromtQuotes isEntering={isEntering}>\r\n        <form className={classes.form} onSubmit={onSubmitHandler} onFocus={onFocusHandler}>\r\n           <div className={classes.control}>\r\n               <label htmlFor='author'>Author</label>\r\n               <input id='author' type='text' ref={textInputRef}/>\r\n           </div>\r\n           <div className={classes.control}>\r\n               <label htmlFor='text'>Text</label>\r\n               <textarea id='text' rows='5' type='text' ref={authorInputRef} />\r\n           </div>\r\n           <div className={classes.btn}>\r\n               <button type='submit'>Add Quote</button>\r\n           </div>\r\n        </form>\r\n        </PromtQuotes>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default NewQuote"],"sourceRoot":""}